<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zydse.mapper.CommonExtensionMapper">
    <resultMap id="BaseResultMap" type="top.zydse.model.Question">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <result column="DESCRIPTION" jdbcType="CLOB" property="description"/>
        <result column="GMT_CREATE" jdbcType="BIGINT" property="gmtCreate"/>
        <result column="GMT_MODIFIED" jdbcType="BIGINT" property="gmtModified"/>
        <result column="CREATOR" jdbcType="BIGINT" property="creator"/>
        <result column="COMMENT_COUNT" jdbcType="INTEGER" property="commentCount"/>
        <result column="VIEW_COUNT" jdbcType="INTEGER" property="viewCount"/>
        <result column="THUMB_COUNT" jdbcType="INTEGER" property="thumbCount"/>
        <result column="TAGS" jdbcType="VARCHAR" property="tags"/>
    </resultMap>

    <select id="listViewHistory" resultType="top.zydse.dto.ViewHistoryDTO">
        SELECT u.id userId, u.name username, q.ID questionId, q.TITLE title, vh.gmt_Modified gmtModified
        FROM VIEW_HISTORY vh
        JOIN QUESTION q ON vh.QUESTION_ID = q.ID
        JOIN USER u ON q.CREATOR = u.ID
        where vh.viewer = #{userId}
        limit #{offset},#{size};
    </select>

    <select id="listThumbHistory" resultType="top.zydse.dto.ThumbHistoryDTO">
        SELECT u.id userId, u.name username, c.ID commentId, c.content comment,
         th.gmt_create gmtCreate, q.id questionId
        FROM THUMB_HISTORY th
        JOIN COMMENT c ON th.comment_id = c.ID
        JOIN USER u ON c.reviewer = u.ID
        JOIN QUESTION q on q.id = c.question_id
        where th.thumb_user = #{userId}
        limit #{offset},#{size};
    </select>

    <insert id="savePublish" parameterType="top.zydse.model.Question">
        insert into QUESTION (title,description,creator,gmt_create,gmt_modified)
        values (#{title},#{description},#{creator},#{gmtCreate},#{gmtModified});
        <selectKey resultType="java.lang.Long" keyColumn="id" keyProperty="id" order="AFTER">
            select last_insert_id();
        </selectKey>
    </insert>

    <insert id="saveUser" parameterType="top.zydse.model.User">
        insert into USER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="salt != null">
                SALT,
            </if>
            <if test="phoneNumber != null">
                PHONE_NUMBER,
            </if>
            <if test="token != null">
                TOKEN,
            </if>
            <if test="credit != null">
                CREDIT,
            </if>
            <if test="bio != null">
                BIO,
            </if>
            <if test="accountId != null">
                ACCOUNT_ID,
            </if>
            <if test="gmtCreate != null">
                GMT_CREATE,
            </if>
            <if test="gmtModified != null">
                GMT_MODIFIED,
            </if>
            <if test="avatarUrl != null">
                AVATAR_URL,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=BIGINT},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=CHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=CHAR},
            </if>
            <if test="credit != null">
                #{credit,jdbcType=INTEGER},
            </if>
            <if test="bio != null">
                #{bio,jdbcType=VARCHAR},
            </if>
            <if test="accountId != null">
                #{accountId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=BIGINT},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
        </trim>
        <selectKey resultType="java.lang.Long" keyColumn="id" keyProperty="id" order="AFTER">
            select last_insert_id();
        </selectKey>
    </insert>

    <select id="listTagsByQuestion" resultType="top.zydse.model.Tag">
        SELECT t.id id,t.TAG_TYPE tagType, t.TAG_NAME tagName, t.COUNT count
        FROM QUESTION_TAG qt
        JOIN QUESTION q ON qt.QUESTION_ID = q.ID
        JOIN TAG t ON t.ID = qt.TAG_ID
        WHERE q.ID = #{questionId}
    </select>

    <select id="getPermCodeByUser" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT p.per_code
        FROM USER_ROLE ur,ROLE_PERMISSION rp,PERMISSION p
        WHERE ur.user_id = #{userId} AND rp.role_id = ur.role_id AND p.id = rp.permission_id
    </select>

    <insert id="insertQuestionTag" parameterType="top.zydse.model.QuestionTag">
        insert into QUESTION_TAG (QUESTION_ID, TAG_ID, GMT_CREATE)
        values (#{questionId,jdbcType=BIGINT}, #{tagId,jdbcType=INTEGER},
        #{gmtCreate,jdbcType=BIGINT})
    </insert>

    <select id="getTagPriority" resultType="java.lang.Integer">
        SELECT t.ID id, t.TAG_NAME tagName, t.COUNT questionCount,
         tc.comment_count commentCount,t.COUNT + tc.comment_count AS priority
        FROM TAG t,(
            SELECT qt.TAG_ID, SUM(q.COMMENT_COUNT) comment_count
            FROM QUESTION_TAG qt, QUESTION q
            WHERE qt.QUESTION_ID = q.ID
            GROUP BY qt.tag_id) tc
        WHERE t.id = tc.tag_id
        ORDER BY priority DESC
    </select>

    <select id="relatedQuestion" parameterType="java.lang.Long" resultType="top.zydse.model.Question">
        SELECT id, title, description, creator, comment_count commentCount,
         view_count viewCount,is_top isTop, is_quality isQuality, gmt_modified gmtModified, gmt_create gmtCreate
        FROM QUESTION
        WHERE ID IN(
            SELECT DISTINCT qt2.QUESTION_ID
            FROM QUESTION_TAG qt2
            WHERE qt2.QUESTION_ID != #{questionId} AND qt2.TAG_ID IN(
                SELECT qt1.TAG_ID
                FROM QUESTION_TAG qt1
                WHERE qt1.QUESTION_ID = #{questionId}))
        ORDER BY gmt_modified
    </select>

</mapper>